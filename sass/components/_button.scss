.btn {
  /*
  Pseudo classes are a special state of a selector.
  Link is a special state of a selector when it is an unvisited link.
  Visited is a state when the user has already clicked on the button once before and sees the button again.
 */
  &,
  &:link,
  &:visited {
    /* capitalization of text */
    text-transform: uppercase;
    /* appearance of decorative lines in text */
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /*
   The transition CSS property is a shorthand property for
   transition-property, transition-duration, transition-timing-function,
   and transition-delay. The transition-property CSS property sets
   the CSS properties to which a transition effect should be applied.
   */
    transition: all 0.4s;
    position: relative;
    font-size: $default-font-size;

    /* change for the <button> element */
    border: none;
    cursor: pointer;
  }

  &:hover {
    /* lifts element up in Y direction */
    transform: translateY(-0.3rem);
    /* define x and y offset & blur of shadow */
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  /* when the btn has been clicked on */
  &:active, &:focus {
    outline: none;
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem;
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;

    &::after {
      background-color: $color-primary;
    }
  }

  /*
 A CSS pseudo-element is a keyword added to a selector that
 lets you style a specific part of the selected element(s).
 In CSS, ::after creates a pseudo-element that is the last
 child of the selected element.
 */
  &::after {
    content: '';
    display: inline-block;
    /* This is like a child of btn element, so height and width
   are 100% of the btn, not the textbox. */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.7s;
  }

  &--animated {
    animation: moveInBottom 2s ease-out 1s;
    /* automatically applies styles at zero
   percent before the animation starts */
    animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color: $color-black, $alpha: 0.15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color: $color-black, $alpha: 0.15);
    transform: translateY(0);
  }
}
